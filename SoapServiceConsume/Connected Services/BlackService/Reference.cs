//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlackService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BlackDataContract", Namespace="http://schemas.datacontract.org/2004/07/SoapService.Models")]
    public partial class BlackDataContract : object
    {
        
        private string FirstNameField;
        
        private System.Guid IdField;
        
        private string LastNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HiStr", Namespace="http://schemas.datacontract.org/2004/07/SoapService.Models")]
    public partial class HiStr : object
    {
        
        private string HiField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hi
        {
            get
            {
                return this.HiField;
            }
            set
            {
                this.HiField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BlackService.IBlackService")]
    public interface IBlackService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackService/GetPersons", ReplyAction="http://tempuri.org/IBlackService/GetPersonsResponse")]
        BlackService.BlackDataContract[] GetPersons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackService/GetPersons", ReplyAction="http://tempuri.org/IBlackService/GetPersonsResponse")]
        System.Threading.Tasks.Task<BlackService.BlackDataContract[]> GetPersonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackService/GetPerson", ReplyAction="http://tempuri.org/IBlackService/GetPersonResponse")]
        BlackService.BlackDataContract GetPerson();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackService/GetPerson", ReplyAction="http://tempuri.org/IBlackService/GetPersonResponse")]
        System.Threading.Tasks.Task<BlackService.BlackDataContract> GetPersonAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackService/GetHi", ReplyAction="http://tempuri.org/IBlackService/GetHiResponse")]
        BlackService.HiStr GetHi();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackService/GetHi", ReplyAction="http://tempuri.org/IBlackService/GetHiResponse")]
        System.Threading.Tasks.Task<BlackService.HiStr> GetHiAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackService/Hello", ReplyAction="http://tempuri.org/IBlackService/HelloResponse")]
        string Hello();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlackService/Hello", ReplyAction="http://tempuri.org/IBlackService/HelloResponse")]
        System.Threading.Tasks.Task<string> HelloAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface IBlackServiceChannel : BlackService.IBlackService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class BlackServiceClient : System.ServiceModel.ClientBase<BlackService.IBlackService>, BlackService.IBlackService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public BlackServiceClient() : 
                base(BlackServiceClient.GetDefaultBinding(), BlackServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IBlackService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BlackServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(BlackServiceClient.GetBindingForEndpoint(endpointConfiguration), BlackServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BlackServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(BlackServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BlackServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(BlackServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BlackServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public BlackService.BlackDataContract[] GetPersons()
        {
            return base.Channel.GetPersons();
        }
        
        public System.Threading.Tasks.Task<BlackService.BlackDataContract[]> GetPersonsAsync()
        {
            return base.Channel.GetPersonsAsync();
        }
        
        public BlackService.BlackDataContract GetPerson()
        {
            return base.Channel.GetPerson();
        }
        
        public System.Threading.Tasks.Task<BlackService.BlackDataContract> GetPersonAsync()
        {
            return base.Channel.GetPersonAsync();
        }
        
        public BlackService.HiStr GetHi()
        {
            return base.Channel.GetHi();
        }
        
        public System.Threading.Tasks.Task<BlackService.HiStr> GetHiAsync()
        {
            return base.Channel.GetHiAsync();
        }
        
        public string Hello()
        {
            return base.Channel.Hello();
        }
        
        public System.Threading.Tasks.Task<string> HelloAsync()
        {
            return base.Channel.HelloAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IBlackService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IBlackService))
            {
                return new System.ServiceModel.EndpointAddress("https://localhost:7174/BlackService.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return BlackServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IBlackService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return BlackServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IBlackService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IBlackService,
        }
    }
}
